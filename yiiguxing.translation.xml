<application>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1676253516474" />
  </component>
  <component name="Translation.Settings">
    <option name="aliTranslateSettings">
      <app-key>
        <option name="appId" value="LTAI5t9srPPBBZFqmmVRnz55" />
      </app-key>
    </option>
    <option name="primaryLanguage" value="CHINESE" />
    <option name="translator" value="ALI" />
  </component>
  <component name="Translation.States">
    <histories>
      <item value="Animate rotation of light" />
      <item value="there is only point, spanning the free space in the level" />
      <item value="Points within (xx, yy, zz)" />
      <item value="return exclusive result" />
      <item value="Remaining" />
      <item value="area" />
      <item value="first Point" />
      <item value="FILTER" />
      <item value="POINT" />
      <item value="FIRST" />
      <item value="extreme Points" />
      <item value="square 3d" />
      <item value="Zero Degrees" />
      <item value="DEFAULT SURFACE" />
      <item value="Rotated" />
      <item value="No rotation" />
      <item value="Basically there is up to 6 alternative ways to place a box, i.e. 3 unique sides, each rotated 90 degrees." />
      <item value="depth" />
      <item value="closest is better" />
      <item value="closest distance to a wall is better" />
      <item value="get the last element, if any" />
      <item value="Constrain max values to the new placement" />
      <item value="b and c only" />
      <item value="already have index for point at absoluteX" />
      <item value="Copy maxX and maxY from existing points: a &amp; b used to determine maxX at yy b &amp; c used to determine maxY at xx determine start and end index based on previous sort (in x direction)" />
      <item value="overall approach: Do not iterate over placements to find point max mins, rather project existing points. project points swallowed by the placement, then delete them project points shadowed by the placement to the other side add points shadowed by the two new points (if they could be moved in the negative direction) remove points which are eclipsed by others keep track of placement borders, where possible" />
      <item value="move boxes up" />
      <item value="Area" />
      <item value="fit2d below might have returned due to deadline" />
      <item value="Fit First" />
      <item value="first" />
      <item value="Volume" />
      <item value="best" />
      <item value="will not match any better than this" />
      <item value="total volume - less is better" />
      <item value="are both empty?" />
      <item value="stack" />
      <item value="load volume - more is better" />
      <item value="structural integrity for this orientation" />
      <item value="Load" />
      <item value="Free" />
      <item value="pick the box with the highest area" />
      <item value="pack" />
      <item value="kind of criteria which could be trivially calculated, perhaps on volume." />
      <item value="binary search: not as simple as in the single-container use-case; discarding containers would need some" />
      <item value="Logical packager for wrapping preprocessing optimizations." />
      <item value="attempt" />
      <item value="this container cannot be used even together with all biggest boxes" />
      <item value="this container cannot even fit a single box" />
      <item value="maximum number of containers" />
    </histories>
  </component>
</application>