<application>
  <component name="AppStorage">
    <histories>
      <item value="check the manual that corresponds to your MySQL server version for the right syntax to use near 'and' at line 1" />
      <item value="already contains value for" />
      <item value="Parses all the unprocessed statement nodes in the cache. It is recommended&#10;      to call this method once all the mappers are added as it provides fail-fast&#10;      statement validation." />
      <item value="first check for SelectKey annotation - that overrides everything else" />
      <item value="Mapped Statements collection already contains value for " />
      <item value="actual type can be a also a parameterized type" />
      <item value="Do not look into Maps if there is not MapKey annotation" />
      <item value="support List&lt;byte[]&gt;" />
      <item value=" actual type can be a also a parameterized type" />
      <item value="The resulting SQL once the dynamic language has been executed." />
      <item value=" The input parameter object (can be null) " />
      <item value="separator" />
      <item value="apped Statements collection already contains value for poo0054.dao.TableAttributeDao.queryById&#10;" />
      <item value="Copyright 2009-2022 the original author or authors.&#10;&#10;       Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;       you may not use this file except in compliance with the License.&#10;       You may obtain a copy of the License at&#10;&#10;          http:www.apache.orglicensesLICENSE-2.0&#10;&#10;       Unless required by applicable law or agreed to in writing, software&#10;       distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;       See the License for the specific language governing permissions and&#10;       limitations under the License." />
      <item value="(best guess)" />
      <item value="Spring may not know the real resource name so we check a flag&#10;         to prevent loading again a resource twice&#10;         this flag is set at XMLMapperBuilderbindMapperForNamespace" />
      <item value="It's important that the type is added before the parser is run&#10;                 otherwise the binding may automatically be attempted by the&#10;                 mapper parser. If the type is already known, it won't try." />
      <item value="is already known to the MapperRegistry" />
      <item value="contains" />
      <item value="already" />
      <item value="The content of the annotation" />
      <item value="script" />
      <item value="An actual SQL String got from an {@link SqlSource} after having processed any dynamic content.&#10;  The SQL may have SQL placeholders &quot;?&quot; and an list (ordered) of an parameter mappings &#10;  with the additional information for each parameter (at least the property name of the input object to read &#10;  the value from). &#10;  &lt;br&gt;&#10;  Can also have additional parameters that are created by the dynamic language (for loops, bind...)." />
      <item value="Represents the content of a mapped statement read from an XML file or an annotation. &#10;  It creates the SQL that will be passed to the database out of the input parameter received from the user." />
      <item value="Language" />
      <item value="Parse the SQL (pre: &lt;selectKey&gt; and &lt;include&gt; were parsed and removed)" />
      <item value="replace variables in text node" />
      <item value="Current context for static variables with values" />
      <item value="Replace variables inside" />
      <item value="Read placeholders and their values from include node definition." />
      <item value="search open token" />
      <item value="close token was not found." />
      <item value=" found open token. let's search close token." />
      <item value="this close token is escaped. remove the backslash and continue." />
      <item value="this open token is escaped. remove the backslash and continue." />
      <item value="replace variables in attribute values" />
      <item value="Recursively apply includes through all SQL fragments." />
      <item value="Parse selectKey after includes and remove them." />
      <item value="Include Fragments before parsing" />
      <item value="skip this statement if there is a previous one with a not null databaseId" />
      <item value="Spring may not know the real resource name so we set a flag&#10;                     to prevent loading again this resource from the mapper interface&#10;                     look at MapperAnnotationBuilderloadXmlResource" />
      <item value="skip this fragment if there is a previous one with a not null databaseId" />
      <item value=" Error attempting to get column 'tableCode' from result set. " />
      <item value=" There is no setter for property named 'url' in 'class poo0054.entity.TableDynamic__jvstf7f_0'" />
      <item value="No Such Method Exception" />
      <item value="Error instantiating class poo0054.entity.TableDynamic with invalid types" />
      <item value="with invalid types " />
      <item value=" attempting to get column 'tableCode' from result set" />
      <item value=" attempting to get column 'id1' from result set.  " />
      <item value="Could not process result for mapping:" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="101" />
        <entry key="ENGLISH" value="102" />
        <entry key="CZECH" value="2" />
        <entry key="PORTUGUESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1666576006353" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20220930001362687" />
      </app-key>
    </option>
    <option name="keepFormat" value="true" />
    <option name="showActionsInContextMenuOnlyWithSelection" value="false" />
    <option name="translator" value="BAIDU" />
  </component>
</application>