<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="598" />
    <option name="newTranslationDialogX" value="813" />
    <option name="newTranslationDialogY" value="448" />
    <histories>
      <item value="Principal" />
      <item value="Credentials" />
      <item value="Operations " />
      <item value="Consider injecting the bean as one of its interfaces or forcing the use of CGLib-based proxies by setting proxyTargetClass=true on @EnableAsync andor @EnableCaching.&#10;" />
      <item value=" Determine handler for the current request." />
      <item value="Process last-modified header, if supported by the handler." />
      <item value="d Handler" />
      <item value="Determine handler adapter for the current request." />
      <item value="Handler" />
      <item value="Determine handler for the current request." />
      <item value=" String index out of range" />
      <item value="String index out of range: 3" />
      <item value="cannot find symbol" />
      <item value=" GET VALUE FROM ROW FOR SIMPLE RESULT MAP" />
      <item value="DISCRIMINATOR" />
      <item value=" Dummy value to associate with an Object in the backing Map" />
      <item value="ILOAD" />
      <item value="Case" />
      <item value="Signature" />
      <item value="Nested" />
      <item value=" process" />
      <item value="Whether all the entries inside the cache(s) are removed.&#10;By default, only the value under the associated key is removed.&#10;Note that setting this parameter to true and specifying a key is not allowed." />
      <item value="Spring Expression Language (SpEL) expression for computing the key dynamically.&#10;Default is &quot;&quot;, meaning all method parameters are considered as a key, unless a custom keyGenerator has been set.&#10;The SpEL expression evaluates against a dedicated context that provides the following meta-data:&#10;result for a reference to the result of the method invocation, which can only be used if beforeInvocation() is false. For supported wrappers such as Optional, result refers to the actual object, not the wrapper&#10;root.method, root.target, and root.caches for references to the method, target object, and affected cache(s) respectively.&#10;Shortcuts for the method name (root.methodName) and target class (root.targetClass) are also available.&#10;Method arguments can be accessed by index. For instance the second argument can be accessed via root.args[1], p1 or a1. Arguments can also be accessed by name if that information is available." />
      <item value="Names of the caches to use for the cache eviction operation.&#10;Names may be used to determine the target cache (or caches), matching the qualifier value or bean name of a specific bean definition." />
      <item value="Unknown column 'menuId' in 'where clause'" />
      <item value=" read it after objectFactory and objectWrapperFactory issue 631" />
      <item value="The DefaultObjectWrapperFactory should never be called to provide an ObjectWrapper." />
      <item value="throws class cast exception as well if types cannot be assigned" />
      <item value="Lower Case" />
      <item value="Lower" />
      <item value="Ignore inner classes and interfaces (including package-info.java)&#10;             Skip also inner classes. See issue 6" />
      <item value="The starting context (a node, for example)." />
      <item value=" Parse selectKey after includes and remove them." />
      <item value="{&#10;        super(config);&#10;        this.config = config;&#10;    }" />
      <item value="fix" />
      <item value="for spring-native" />
      <item value="the mapper interface is the original class of the bean&#10;       but, the actual class of the bean is MapperFactoryBean" />
      <item value="PropertyResourceConfigurer does not expose any methods to explicitly perform&#10;       property placeholder substitution. Instead, create a BeanFactory that just&#10;       contains this mapper scanner and post process the factory." />
      <item value=" check for nested result maps in parameter mappings (issue 30)" />
      <item value="Error parsing Mapper XML. The XML location is 'resourcesmapperTableAttributeDao.xml'. Cause: org.apache.ibatis.cache.CacheException: Invalid base cache implementation (class org.apache.ibatis.cache.decorators.FifoCache).  Base cache implementations must have a constructor that takes a String id as a parameter.  Cause: java.lang.NoSuchMethodException: org.apache.ibatis.cache.decorators.FifoCache.&lt;init&gt;(java.lang.String)" />
      <item value="HANDLE OUTPUT PARAMETER" />
      <item value="nested resultmaps" />
      <item value=" multiple resultsets" />
      <item value=" Cached Automappings" />
      <item value="temporary marking flag that indicate using constructor mapping (use field to reduce memory usage)" />
      <item value=" Register annotation config processors, if necessary." />
      <item value="Property 'configuration' and 'configLocation' can not specified with together" />
      <item value=" Invoke factory processors registered as beans in the context." />
      <item value="Invoke factory processors registered as beans in the context." />
      <item value="There is no getter for property named 'wherePropertiesReplace' in 'class poo0054.ibatis.entity.TableAttribute'" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="170" />
        <entry key="ENGLISH" value="171" />
        <entry key="DANISH" value="1" />
        <entry key="CZECH" value="3" />
        <entry key="PORTUGUESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1668993495383" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20220930001362687" />
      </app-key>
    </option>
    <option name="keepFormat" value="true" />
    <option name="showActionsInContextMenuOnlyWithSelection" value="false" />
    <option name="translator" value="BAIDU" />
  </component>
</application>